# Generated by Django 5.2.2 on 2025-06-29 17:02

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Марка')),
            ],
            options={
                'verbose_name': 'Марка автомобиля',
                'verbose_name_plural': 'Марки автомобилей',
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок объявления')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание автомобиля')),
                ('generation', models.CharField(blank=True, max_length=100, null=True, verbose_name='Поколение (если нужно)')),
                ('year', models.PositiveSmallIntegerField(verbose_name='Год выпуска')),
                ('transmission', models.CharField(choices=[('AT', 'Автомат'), ('MT', 'Механика'), ('CVT', 'Вариатор'), ('AMT', 'Робот')], max_length=20, verbose_name='Коробка передач')),
                ('drive_type', models.CharField(choices=[('FWD', 'Передний'), ('RWD', 'Задний'), ('AWD', 'Полный')], max_length=20, verbose_name='Тип привода')),
                ('body_type', models.CharField(max_length=20, verbose_name='Кузов (седан, хэтчбек и т.д.)')),
                ('color', models.CharField(max_length=50, verbose_name='Цвет')),
                ('engine_type', models.CharField(choices=[('petrol', 'Бензин'), ('diesel', 'Дизель'), ('hybrid', 'Гибрид'), ('ev', 'Электро')], max_length=20, verbose_name='Тип двигателя')),
                ('engine_volume', models.DecimalField(decimal_places=1, max_digits=3, verbose_name='Объем двигателя, л')),
                ('horsepower', models.PositiveSmallIntegerField(verbose_name='Мощность, л.с.')),
                ('mileage', models.PositiveIntegerField(verbose_name='Пробег, км')),
                ('owners_count', models.PositiveSmallIntegerField(verbose_name='Количество владельцев')),
                ('vin', models.CharField(blank=True, error_messages={'unique': 'A car with that vin is already exists.'}, max_length=17, validators=[django.core.validators.RegexValidator(message='Введите корректный VIN: 17 символов, латинские буквы (без I, O, Q) и цифры.', regex='^[A-HJ-NPR-Z0-9]{17}$')], verbose_name='VIN номер')),
                ('is_new', models.BooleanField(default=False, verbose_name='Новый или с пробегом')),
                ('state', models.CharField(choices=[('excellent', 'Отличное'), ('good', 'Хорошее'), ('needs_repair', 'Требует ремонта')], max_length=20, verbose_name='Состояние')),
                ('pts_type', models.CharField(choices=[('original', 'Оригинал'), ('duplicate', 'Дубликат')], max_length=10, verbose_name='ПТС')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена, руб.')),
                ('city', models.CharField(max_length=100, verbose_name='Город продажи')),
                ('address', models.CharField(blank=True, max_length=200, verbose_name='Адрес')),
                ('features', models.TextField(blank=True, verbose_name='Дополнительные опции и комплектация')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.brand')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Машина',
                'verbose_name_plural': 'Машины',
            },
        ),
        migrations.CreateModel(
            name='CarArchive',
            fields=[
                ('car_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dashboard.car')),
                ('archived_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Архивная машина',
                'verbose_name_plural': 'Архивные машины',
            },
            bases=('dashboard.car',),
        ),
        migrations.CreateModel(
            name='CarImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='car_photos/', verbose_name='Фотография автомобиля')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Главное фото')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='dashboard.car', verbose_name='К какой машине привязано фото')),
            ],
            options={
                'verbose_name': 'Фотография',
                'verbose_name_plural': 'Фотографии',
            },
        ),
        migrations.CreateModel(
            name='CarModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Модель')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='models', to='dashboard.brand', verbose_name='Марка')),
            ],
            options={
                'verbose_name': 'Модель автомобиля',
                'verbose_name_plural': 'Модели автомобилей',
                'unique_together': {('brand', 'name')},
            },
        ),
        migrations.AddField(
            model_name='car',
            name='model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.carmodel'),
        ),
        migrations.AddConstraint(
            model_name='car',
            constraint=models.CheckConstraint(condition=models.Q(('year__gte', 1500)), name='car_year_gte_1500'),
        ),
        migrations.AddConstraint(
            model_name='car',
            constraint=models.CheckConstraint(condition=models.Q(('updated_at__gte', models.F('created_at'))), name='check_created_date'),
        ),
    ]
